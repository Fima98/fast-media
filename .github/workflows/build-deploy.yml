name: Build and Deploy

on: [push, pull_request]

jobs:
    build:
        environment:
            name: testing
        env:
            DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
            DATABASE_PORT: ${{secrets.DATABASE_PORT}}
            DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            DATABASE_NAME: ${{secrets.DATABASE_NAME}}
            DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
            SECRET_KEY: ${{secrets.SECRET_KEY}}
            ALGORITHM: ${{secrets.ALGORITHM}}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
                    POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Python 3.13
              uses: actions/setup-python@v5.3.0
              with:
                  python-version: "3.13"
            - name: Update Pip
              run: python -m pip install --upgrade pip
            - name: Install dependencies
              run: pip install -r requirements.txt
            - name: Test with Pytest
              run: |
                  pip install pytest
                  pytest

            # I HATE DOCKER

    deploy:
        runs-on: ubuntu-latest
        needs: [build]
        environment:
            name: production
        steps:
            - name: pulling git repo
              uses: actions/checkout@v4
            - name: deploying to Heroku
              uses: akhileshns/heroku-deploy@v3.12.12
              with:
                  heroku_api_key: ${{secrets.HEROKU_API_KEY}}
                  heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
                  heroku_email: ${{secrets.HEROKU_EMAIL}}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            # Log in to Docker Hub
            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            # Build the Docker image using Docker Compose
            - name: Build Docker image
              run: |
                  docker-compose -f docker-compose.yml build

            # Push the Docker image to Docker Hub
            - name: Push Docker image to Docker Hub
              run: |
                  docker-compose -f docker-compose.yml push

#             - name: Build Docker image
#               run: |
#                   docker build -t yourusername/yourapp:latest .
#
#             - name: Push Docker image to Docker Hub
#               run: |
#                   docker push yourusername/yourapp:latest

# - name: deploy to ubuntu server
#   uses: appleboy/ssh-action@master
#   with:
#     host: ${{secrets.PROD_HOST}}
#     username: ${{secrets.PROD_USERNAME}}
#     password: ${{secrets.PROD_PASSWORD}}
#     script: |
#       cd app/src
#       git pull
#       echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api
